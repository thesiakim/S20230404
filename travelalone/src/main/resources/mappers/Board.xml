<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위를 통해 mapper 사용 가능 -->

<mapper namespace="com.travelAlone.s20230404.RoBoardMapper">
   
	<!-- 전체 게시판 갯수 -->
	<select id="roBoardAllCount" resultType="int">
	   Select	Count(*)
	   From		Board b, Member m
	   Where   	b.b_re_level = 0
	   And		b.member_id = m.member_id
	   <choose>
	    	<when test="listCategory == 'lc_total'">
	    		and (
	    			 b.b_title like '%' || #{keyWord} || '%' or
	    			 b.b_content like '%' || #{keyWord} || '%' or
	               m.m_nickname like '%' || #{keyWord} || '%'
	              )
	    	</when>
	    	<when test="listCategory == 'lc_title'">
	    		and b.b_title like '%' || #{keyWord} || '%'
	    	</when>
	    	<when test="listCategory == 'lc_content'">
	    		and b.b_content like '%' || #{keyWord} || '%'
	    	</when>
	    	<when test="listCategory == 'lc_writer'">
	    		and m.m_nickname like '%' || #{keyWord} || '%'
	    	</when>
	    	<otherwise>
	    	
	    	</otherwise>
	   </choose>       
	</select>
	
	<!-- 전체 게시판 리스트 -->
	  <select id="roBoardAllList" parameterType="Board" resultType="Board">
	     Select *
	     From
	     (   Select   rownum rn, a.*
	        From   (   
	                 Select   b.*, m.m_nickname
	                 From   Board b, Member m
	                 Where   b.b_re_level = 0
	                 and      b.member_id = m.member_id
	                 <choose>
	                 	<when test="listCategory == 'lc_total'">
	                 		and (
	                 			 b.b_title like '%' || #{keyWord} || '%' or
	                 			 b.b_content like '%' || #{keyWord} || '%' or
	                            m.m_nickname like '%' || #{keyWord} || '%'
	                           )
	                 	</when>
	                 	<when test="listCategory == 'lc_title'">
	                 		and b.b_title like '%' || #{keyWord} || '%'
	                 	</when>
	                 	<when test="listCategory == 'lc_content'">
	                 		and b.b_content like '%' || #{keyWord} || '%'
	                 	</when>
	                 	<when test="listCategory == 'lc_writer'">
	                 		and m.m_nickname like '%' || #{keyWord} || '%'
	                 	</when>
	                 	<otherwise>
	                 	
	                 	</otherwise>
	                 </choose>
	                 <choose>
	                    <when test="orderList == 'view'">
	                       order by b.b_view_cnt desc
	                    </when>
	                    <when test="orderList == 'like'">
	                       order by b.b_like_cnt desc
	                    </when>
	                    <otherwise>
	                       order by b.create_date desc
	                    </otherwise>
	                 </choose>
	              )   a
	     )
	     Where rn between #{start} and #{end}
	     
	</select>
	  
	  
	<!-- 게시판 갯수 -->
	<select id="roBoardCount" parameterType="Board" resultType="int">
		Select   Count(*)
		From      Board b,  Member m
		Where      b.b_re_level = 0
		and      b.member_id = m.member_id
		and      b.b_common_board = #{b_common_board}
		<choose>
			<when test="listCategory == 'lc_total'">
			and (
	                b.b_title like '%' || #{keyWord} || '%' or
	                b.b_content like '%' || #{keyWord} || '%' or
	                 m.m_nickname like '%' || #{keyWord} || '%'
	                )
			</when>
	         	<when test="listCategory == 'lc_title'">
	            and b.b_title like '%' || #{keyWord} || '%'
	         	</when>
	        	<when test="listCategory == 'lc_content'">
	            and b.b_content like '%' || #{keyWord} || '%'
	         	</when>
	         	<when test="listCategory == 'lc_writer'">
	            and m.m_nickname like '%' || #{keyWord} || '%'
	         	</when>
	         	<otherwise>
	         
			</otherwise>
		</choose>
	</select>
	
	<!-- 게시판 리스트 -->
	<select id="roBoardList" parameterType="Board" resultType="Board">
	     Select *
	     From
	     (   Select   rownum rn, a.*
	        From   (   Select   b.*, m.m_nickname
	                 From   Board b, Member m
	                 Where   b.b_re_level = 0
	                 and      b.member_id = m.member_id
	                 and      b.b_common_board = #{b_common_board}
	                 <choose>
	                    <when test="listCategory == 'lc_total'">
	                       and (
	                           b.b_title like '%' || #{keyWord} || '%' or
	                           b.b_content like '%' || #{keyWord} || '%' or
	                            m.m_nickname like '%' || #{keyWord} || '%'
	                           )
	                    </when>
	                    <when test="listCategory == 'lc_title'">
	                       and b.b_title like '%' || #{keyWord} || '%'
	                    </when>
	                    <when test="listCategory == 'lc_content'">
	                       and b.b_content like '%' || #{keyWord} || '%'
	                    </when>
	                    <when test="listCategory == 'lc_writer'">
	                       and m.m_nickname like '%' || #{keyWord} || '%'
	                    </when>
	                    <otherwise>
	                    
	                    </otherwise>
	                 </choose>
	                 <choose>
	                    <when test="orderList == 'view'">
	                       order by b.b_view_cnt desc
	                    </when>
	                    <when test="orderList == 'like'">
	                       order by b.b_like_cnt desc
	                    </when>
	                    <otherwise>
	                       order by b.create_date desc
	                    </otherwise>
	                 </choose>
	              ) a
	     )
	     Where rn between #{start} and #{end}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="roBoardView" parameterType="long">
	     Update   Board
	     Set      b_view_cnt = b_view_cnt + 1
	     Where   board_id = #{board_id}
	</update>
	
	<!-- 게시물 정보 리스트 -->
	<select id="roBoardSelList" parameterType="long" resultType="Board">
	     Select		b.*, m.m_nickname
	     From		Board b, Member m
	     Where		b.b_ref = #{board_id}
	     and		b.member_id = m.member_id
	     order by	b.b_re_step
	</select>
	
	<!-- 게시물 작성 -->
	<insert id="roBoardInsert" parameterType="Board">
	     Insert into
	     Board
	     <!-- (board_id, member_id, b_title, b_content, b_view_cnt, b_like_cnt, b_common_board, b_ref, b_re_step, b_re_level, create_date, modified_date, IMG_STORED_FILE_YN) -->
	 values (board_id_seq.nextval, #{member_id, jdbcType=NUMERIC}, #{b_title}, #{b_content}, 0, 0, #{b_common_board}, board_id_seq.currval, 0, 0, sysdate, sysdate,0)
	
	 <!-- 시퀀스로 생성된 값을 반환받기 위한 SELECT 문 정의 -->
	   <selectKey keyProperty="board_id" resultType="long" order="AFTER">
	      SELECT board_id_seq.currval AS board_id FROM dual
	   </selectKey>
	</insert>
	
	<!-- 게시물 댓글 작성 -->
	<insert id="roBoardReInsert" parameterType="Board">
	   Insert   into
	   Board   (board_id, member_id, b_content, b_like_cnt, b_common_board, b_ref, b_re_step, b_re_level, create_date, modified_date,IMG_STORED_FILE_YN)
	   values   (
	          board_id_seq.nextval,
	          #{member_id},
	          #{b_content},
	          0, 
	          #{b_common_board},
	          #{board_id},
	          (select  nvl(max(b_re_step),0) + 1 from board where b_ref = #{board_id}),
	          1,
	          sysdate,
	          sysdate,
	          0
	         )
	</insert>
	
	<!-- 대댓글 sql (1. 댓글사이 가르기) -->
    <update id="updateReLevel" parameterType="Board">
    	UPDATE 	board
    	SET		b_re_step = b_re_step + 1
    	WHERE	b_ref = #{b_ref}
    	AND		b_re_step > #{b_re_step}
    </update>
    
    <!-- 대댓글 sql (1. 가른 댓글 사이에 삽임)  -->
    <insert id="insertReLevel" parameterType="Board">
		INSERT INTO board
        (board_id, member_id, b_content, b_common_board, b_ref, b_re_step, b_re_level, create_date, modified_date,IMG_STORED_FILE_YN)
      	values   (
			board_id_seq.nextval,
			#{member_id},
			#{b_content},
			#{b_common_board},
			#{board_id},
			#{b_re_step} + 1,
			#{b_re_level} + 1,
			sysdate,
			sysdate,
			0 )
    </insert>
	
	<!-- 게시물 삭제 -->
	<delete id="roBoardDelete" parameterType="long">
	      Delete  From Board
	      Where
	      <choose>
	         <when test="b_re_level == 2">
	            board_id = #{board_id}
	         </when>
	         <otherwise>
	            b_ref = #{board_id}
	         </otherwise>
	     </choose>
	</delete>
	
	<!-- 게시물 댓글 및 대댓글 삭제 -->
	<select id="roBoardDeleteRe" parameterType="Board" statementType="CALLABLE">
	   {
	      call boardDelRe(
	          #{b_ref,      mode=IN,   jdbcType=INTEGER}
	         ,#{b_re_step,   mode=IN,   jdbcType=INTEGER}
	         ,#{b_re_level,   mode=IN,   jdbcType=INTEGER}
	      )
	   }
	</select>
	
	<!-- 게시물 댓글 수정 -->
	<update id="roBoardUpdateRe" parameterType="Board">
	      Update   board
	      Set      b_content = #{b_content},
	               modified_date = sysdate
	      Where    board_id = #{board_id}
	</update>
	
	<!-- 게시물 정보 수정  -->
	<update id="roBoardUpdate" parameterType="Board">
	      Update   board
	      Set      b_title = #{b_title},
	      		   b_content = #{b_content},
	               modified_date = sysdate
	      Where	   board_id = #{board_id}      
	</update>
	
	<!-- 추천 수 증가  -->
    <update id="jhLike" parameterType="Board">
    	UPDATE 	board
    	SET		b_like_cnt = b_like_cnt + 1
    	WHERE	board_id = #{board_id}
    </update>
    
    <!-- 중복 추천시 추천수 감소 -->
    <update id="jhLikeCancel" parameterType="Board">
		UPDATE    board
		SET      b_like_cnt = b_like_cnt - 1
		WHERE   board_id = #{board_id}
    </update>
   
   <!-- 게시글 이미지 유무 확인 sql  -->
    <update id="imgStoredFileYn" parameterType="Board">
    	UPDATE 	board
    	SET		img_stored_file_yn = 1
    	WHERE	board_id = #{board_id}
    </update>
    
    <!-- 마이페이지 cnt sql  -->
	<select id="myPageCommunityListCnt" parameterType="Long" resultType="int">
		SELECT	COUNT(*)
		FROM	board
		WHERE	b_re_level = 0
		AND		member_id = #{member_id}            
	</select>
   
	<!-- 마이페이지 리스트 sql  -->
	<select id="myPageCommunityList" parameterType="Board" resultType="Board">
	 	SELECT	 * 
      	FROM 	(SELECT  ROWNUM		rn, a.* 
         		 FROM   (SELECT		b.*, m.m_nickname
                  		 FROM		board b, member m
                  		 WHERE		b.b_re_level = 0 
                  		 AND		b.member_id = #{member_id}
                  		 AND		b.member_id = m.member_id
						 ORDER BY	b.create_date DESC ) a  
				) 
		WHERE rn BETWEEN #{start} AND #{end} 
	</select>
	
	<!-- 유저 페이지 -->
    <select id="userPage" parameterType="long" resultType="Member">
    	SELECT	*
    	FROM	member
    	WHERE	member_id = #{member_id}
    </select>
    
	<!-- 마이페이지 여행지 리뷰 리스트  -->
    <select id="listReviewPageTra" parameterType="Tra_Rev" resultType="Tra_Rev">
	 	SELECT	 * 
      	FROM 	(SELECT  ROWNUM rn, a.* 
         		 FROM   (SELECT		tr.* , t.t_name
						 FROM		tra_rev tr, travel t
						 WHERE		tr.member_id = #{member_id} 
						 AND		tr.travel_id = t.travel_id 
						 ORDER BY	tr.create_date DESC ) a  
				) 
		WHERE	 rn BETWEEN #{start} AND #{end} 
    </select>
    
    <!-- 마이페이지 여행지 리뷰 페이징 -->
    <select id="totalReviewPageTra" parameterType="Long" resultType="int">
		SELECT	COUNT(*)
		FROM	tra_rev
		WHERE	member_id = #{member_id}            
	</select>
	
     <!-- 마이페이지 숙소 리뷰 리스트  -->
    <select id="listReviewPageHou" parameterType="Hou_Rev" resultType="Hou_Rev">
	 	SELECT	 * 
      	FROM 	(SELECT  ROWNUM rn, a.* 
         		 FROM   (SELECT		hr.* , h.h_name
						 FROM		hou_rev hr, house h
						 WHERE		hr.member_id = #{member_id} 
						 AND		hr.house_id = h.house_id  
						 ORDER BY	hr.create_date DESC ) a  
				) 
		WHERE	 rn BETWEEN #{start} AND #{end} 
    </select>
    
    <!-- 마이페이지 숙소 리뷰 페이징 -->
    <select id="totalReviewPageHou" parameterType="Long" resultType="int">
		SELECT	COUNT(*)
		FROM	hou_rev
		WHERE	member_id = #{member_id}            
	</select>
	
    <!-- 마이페이지 맛집 리뷰 리스트  -->
    <select id="listReviewPageRes" parameterType="Res_Rev" resultType="Res_Rev">
	 	SELECT	 * 
      	FROM 	(SELECT  ROWNUM rn, a.* 
         		 FROM   (SELECT		rr.* , r.r_name
						 FROM		res_rev rr, restaurant r
						 WHERE		rr.member_id = #{member_id} 
						 AND		rr.restaurant_id = r.restaurant_id  
						 ORDER BY	rr.create_date DESC ) a  
				) 
		WHERE	 rn BETWEEN #{start} AND #{end} 
    </select>
    
    <!-- 마이페이지 맛집 리뷰 페이징 -->
    <select id="totalReviewPageRes" parameterType="Long" resultType="int">
		SELECT	COUNT(*)
		FROM	res_rev
		WHERE	member_id = #{member_id}            
	</select>
	
	<select id="mypageTagUpdate" parameterType="long" resultType="interest">
		<![CDATA[
		SELECT 	i.interest_id, i.member_id, i.i_common_interest, i.create_date, i.modified_date, c.word
		FROM 	interest i inner join common c on i.i_common_interest = concat(c.bcd, c.mcd)
		WHERE 	i.member_id = #{member_id}
		]]>
	</select>
	
	<insert id="userScoreUpdate" parameterType="Score">
		INSERT INTO score 
		<!-- (score_id, member_id, s_common_spec, create_Date, modified_date)  -->
		VALUES (SCORE_ID_SEQ.NEXTVAL, #{member_id}, #{s_common_spec}, sysdate, sysdate)
	</insert>
   	
   	
</mapper>