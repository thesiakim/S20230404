<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelAlone.s20230404.TravelMapper">


	<!-- 여행지 정보글 갯수 세기 -->
	<select id="traTotal" resultType="int">
		SELECT COUNT(*) FROM TRAVEL
	</select>
	
	
	<!-- 여행지 목록 가져오기 -->
	<select id="traList" parameterType="Travel" resultType="Travel">
		<![CDATA[
			SELECT *
			FROM (
				SELECT rownum rn, a.*
				FROM (
					SELECT
						TRAVEL_ID,
						T_NAME,
						T_CONTENT,
						T_ADDRESS,
						T_CALL,
						T_HOUR,
						T_PARKING,
						T_FEE,
						T_COMMON_TRAVEL,
						(
							SELECT word 
							FROM (
								SELECT bcd || mcd AS code, word 
								FROM common 
								WHERE bcd = 'loc'
							) b
							WHERE code = T_COMMON_LOC
						) AS T_COMMON_LOC,
						TRUNC((SELECT AVG(R_SCORE) FROM tra_rev WHERE travel_id = TRAVEL.TRAVEL_ID), 0) AS T_AvgScore,
						(SELECT COUNT(*) FROM tra_rev WHERE travel_id = TRAVEL.TRAVEL_ID) AS T_RevCount,
						CREATE_DATE,
						MODIFIED_DATE
					FROM TRAVEL
					ORDER BY TRAVEL_ID DESC
				) a
			)
			WHERE rn >= #{start} 
			AND rn <= #{end}
		]]>
	</select>
	
		
	<!-- 여행지 정보글 가져오기 -->
	<select id="traDetail" resultType="Travel">		
	  SELECT	TRAVEL_ID, T_NAME, T_CONTENT, T_ADDRESS, T_CALL, T_HOUR,
				T_PARKING, T_FEE, T_COMMON_TRAVEL, T_COMMON_LOC, CREATE_DATE, MODIFIED_DATE		 
	  FROM	TRAVEL
	  WHERE	TRAVEL_ID = #{TRAVEL_ID}   
	</select>
	
	
	<!-- 여행지 정보글 시퀀스 가져오기 -->		
	<select id="traSeq" parameterType="Travel" resultType="int">
	  SELECT	TRAVEL_ID_SEQ.nextval
	  FROM	dual
	</select>
	
	
	<!-- 여행지 정보글 작성하기 -->
	<insert id="traInsert" parameterType="Travel">
	  INSERT INTO TRAVEL 
	  (TRAVEL_ID, T_NAME, T_CONTENT, T_ADDRESS, T_CALL, T_HOUR,
	   T_PARKING, T_FEE, T_COMMON_TRAVEL, T_COMMON_LOC, CREATE_DATE, MODIFIED_DATE)
	  VALUES 
	  (#{travel_id}, #{t_name}, #{t_content}, #{t_address}, #{t_call}, #{t_hour},
	   #{t_parking}, #{t_fee}, #{t_common_travel}, #{t_common_loc}, sysdate, sysdate)				
	</insert>
	
	
	<!-- 여행지 정보글 수정하기 -->
	<update id="traUpdate" parameterType="Travel">
	  UPDATE	TRAVEL 
	  SET	T_COMMON_TRAVEL = #{t_common_travel},
	  		T_COMMON_LOC = #{t_common_loc}, 
			T_NAME = #{t_name},
			T_ADDRESS = #{t_address},
			T_CALL = #{t_call},
			T_HOUR = #{t_hour},
			T_PARKING = #{t_parking},
			T_FEE = #{t_fee},
			T_CONTENT = #{t_content}
	  WHERE	TRAVEL_ID = #{travel_id}		
	</update>


	<!-- 여행지 정보글 삭제하기 -->
	<delete id="traDelete" parameterType="int">
	  delete from TRAVEL where TRAVEL_ID = #{travel_id}
	</delete>
	
	
	<!-- 여행지 검색어 결과 갯수 -->
	<select id="traSearch" parameterType="Travel" resultType="int">
	  select count(*) from TRAVEL
	  where
	  <choose>
	    <when test="search == 's_title'">
	      t_name like '%' || #{keyword} || '%'
	    </when>
	    <otherwise>
	      t_name like '%'
	    </otherwise>
	  </choose>
	</select>
	
	
	<!-- 여행지 검색 결과 -->
	<select id="traSearchList" parameterType="Travel" resultType="Travel">
	  SELECT *
	  FROM (
	    SELECT rownum rn, a.*
	    FROM (
	      select *
	      from TRAVEL
	      <choose>
	        <when test="search == 's_title'">
	          WHERE t_name like '%' || #{keyword} || '%'
	        </when>
	        <otherwise>
	          WHERE t_name like '%'
	        </otherwise>
	      </choose>
	      order by travel_id
	    ) a
	  )   
	  WHERE rn BETWEEN #{start} and #{end} 
	</select>
	
	
	<!-- 조회된 여행지 종류 데이터 갯수 세기 -->  
	<select id="traFilter" resultType="int">
	  select count(*) from TRAVEL where T_COMMON_TRAVEL = #{code}
	</select>


	<!-- 조회된 여행지종류데이터 리스트 -->
	<select id="traOptList" parameterType="Travel" resultType="Travel">
	    SELECT *
	    FROM
	    (
	        SELECT rownum rn, a.*
	        FROM
	        (
	            SELECT
	                TRAVEL_ID,
	                T_NAME,
	                T_CONTENT,
	                T_ADDRESS,
	                T_CALL,
	                T_HOUR,
	                T_PARKING,
	                T_FEE,
	                T_COMMON_TRAVEL,
	                (
	                    SELECT COUNT(*)
	                    FROM tra_rev
	                    WHERE travel_id = TRAVEL.TRAVEL_ID
	                ) AS T_RevCount,
	                TRUNC((
	                    SELECT AVG(R_SCORE)
	                    FROM tra_rev
	                    WHERE travel_id = TRAVEL.TRAVEL_ID
	                ), 0) AS T_AvgScore,
	                CREATE_DATE,
	                MODIFIED_DATE,
	                (
	                    SELECT word
	                    FROM (
	                        SELECT bcd||mcd as code, word
	                        FROM common
	                        WHERE bcd='loc'
	                    ) b
	                    WHERE code = T_COMMON_LOC
	                ) AS T_COMMON_LOC
	            FROM TRAVEL
	            WHERE T_COMMON_TRAVEL = #{code}
	            ORDER BY travel_id DESC
	        ) a
	    )
	    WHERE rn BETWEEN #{start} AND #{end}
	</select>
			
			
	<!-- 조회된 지역 데이터 갯수 세기 -->
	<select id="traLocFilter" resultType="int">
		SELECT COUNT(*) FROM TRAVEL WHERE T_COMMON_LOC = #{code}
	</select>		
	
	
	<!-- 조회된 지역데이터 리스트 --> 				
	<select id="traLocList" parameterType="Travel" resultType="Travel">
		SELECT *
		FROM
		(
			SELECT rownum rn, a.*
			FROM
				(
					SELECT  
						TRAVEL_ID,
						T_NAME, 
						T_CONTENT,
						T_ADDRESS,
						T_CALL,
						T_HOUR,
						T_PARKING, 
						T_FEE, 
						T_COMMON_TRAVEL,
						(
							SELECT COUNT(*) FROM tra_rev WHERE travel_id = TRAVEL.TRAVEL_ID
						) AS T_RevCount ,
						TRUNC(
							(
								SELECT AVG(R_SCORE) FROM tra_rev WHERE travel_id = TRAVEL.TRAVEL_ID
							), 0
						) AS T_AvgScore,
						CREATE_DATE,
						MODIFIED_DATE, 
						(
							SELECT word 
							FROM
							(
								SELECT bcd||mcd AS code, word 
								FROM common
								WHERE bcd='loc'
							) b
							WHERE code = T_COMMON_LOC
						) AS T_COMMON_LOC
					FROM TRAVEL
					WHERE T_COMMON_LOC = #{code}        
					ORDER BY travel_id DESC
				) a
		)   
		WHERE rn BETWEEN #{start} AND #{end} 	
	</select>


</mapper>


<!-- 
//TRAVEL_ID			NUMBER
//T_NAME			VARCHAR2(50 BYTE)
//T_CONTENT			VARCHAR2(4000 BYTE)
//T_ADDRESS			VARCHAR2(4000 BYTE)
//T_CHECKINOUT		VARCHAR2(4000 BYTE)
//T_CALL			VARCHAR2(4000 BYTE)
//T_ROOM			VARCHAR2(4000 BYTE)
//T_EAT				VARCHAR2(4000 BYTE)
//T_PARKING			VARCHAR2(4000 BYTE)
//T_COMMON_TRAVEL	VARCHAR2(20 BYTE)
//T_COMMON_LOC		VARCHAR2(20 BYTE)
//CREATE_DATE		DATE
//MODIFIED_DATE		DATE -->