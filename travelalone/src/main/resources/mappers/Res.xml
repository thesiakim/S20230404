<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelAlone.s20230404.RestaurantMapper">

<!-- 맛집정보글 갯수세기 -->
<select id="skRestaurantTotal" resultType="int">
	select Count(*) FROM RESTAURANT
</select>

<!-- 맛집 목록가져오기 -->
		<select id="skRestaurantList" parameterType="Res" resultType="Res" >
    		<![CDATA[
				SELECT *
				FROM
				(	SELECT rownum rn , a.*
				        FROM
				                   (select  RESTAURANT_ID
											,R_NAME
											,R_CONTENT
											,R_ADDRESS
											,R_HOUR
											,R_CALL
											,R_PARKING
											,R_MENU
											,R_COMMON_RESTAURANT
											, (select word 
			                          		  from(select 
			                                    bcd||mcd as code, 
			                                    word 
			                                from
			                                    common
			                                where bcd='loc') b
			                                where code = R_COMMON_LOC)as R_COMMON_LOC
			                                ,TRUNC((SELECT AVG(R_SCORE) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID), 0) AS R_AvgScore    
			                         ,(SELECT COUNT(*) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID) AS R_RevCount 
			                      	  	 ,CREATE_DATE
			                       		 ,MODIFIED_DATE										
									  from  RESTAURANT 									  									  									  									   
									  order by RESTAURANT_ID desc) a
			)   
		 		WHERE  rn >= #{start} 
		 		and    rn <= #{end} 
		 	 ]]>	
			
		</select>
		
<!-- 맛집 정보글가져오기 -->
		<select id="skRestaurantSelOne" resultType="Res">		
		  SELECT	RESTAURANT_ID, R_NAME, R_CONTENT, R_ADDRESS, R_HOUR, R_CALL, R_PARKING,
					R_MENU, R_COMMON_RESTAURANT, R_COMMON_LOC, CREATE_DATE, MODIFIED_DATE	 
		 FROM  RESTAURANT  WHERE RESTAURANT_ID = #{RESTAURANT_ID}
		</select>

<!-- 맛집 정보글 시퀀스가져오기 -->		
		<select id="skSeqRestaurant"  parameterType="Res" resultType="int">
			select RESTAURANT_ID_SEQ.nextval from dual
		</select>

<!-- 맛집 정보글작성하기 -->
		<insert id="insertRestaurant" parameterType="Res">
			 insert into RESTAURANT
			 (RESTAURANT_ID, R_NAME, R_CONTENT, R_ADDRESS, R_HOUR, R_CALL, R_PARKING,
					R_MENU, R_COMMON_RESTAURANT, R_COMMON_LOC, CREATE_DATE, MODIFIED_DATE)
			 values 
			 (#{restaurant_id}, #{r_name}, #{r_content}, #{r_address}, #{r_hour}, #{r_call} ,
			  #{r_parking}, #{r_menu}, #{r_common_restaurant}, #{r_common_loc},  sysdate, sysdate ) 				
		</insert>

<!-- 맛집 정보글수정하기 -->
		<update id="skRestaurantUpdate" parameterType="Res">
		 UPDATE RESTAURANT
		 SET 
		  R_COMMON_RESTAURANT    = #{r_common_restaurant},
		  R_COMMON_LOC 	    	 = #{r_common_loc}, 
		  R_NAME 		 		 = #{r_name},
		  R_CONTENT				 = #{r_content} ,
		  R_ADDRESS				 = #{r_address} ,
		  R_HOUR				 = #{r_hour} ,
		  R_CALL				 = #{r_call} ,
		  R_PARKING				 = #{r_parking},
		  R_MENU				 = #{r_menu}
					    
		 WHERE  RESTAURANT_ID 	= #{restaurant_id}
		
		</update>

<!--  맛집 정보글삭제하기 -->
		<delete id="deleteRestaurant" parameterType="int">
			delete from RESTAURANT where RESTAURANT_ID = #{restaurant_id}
		</delete>

<!-- 맛집 검색 횟수 -->
		<select id="condRestaurantCnt" parameterType="Res" resultType="int">
			select Count(*) FROM RESTAURANT
			where
			<choose>
				<when test="search == 's_title'">
				  r_name  like '%' || #{keyword} || '%' 
				</when>
				<otherwise>
					r_name like '%'
				</otherwise>
			</choose> 
		</select>
		
<!-- 맛집 검색 결과 -->
		  <select id="skrestaurantSearchList" parameterType="Res"  resultType="Res" >
		SELECT *
		FROM
		(
		        SELECT rownum rn , a.*
		        FROM
		                   (select * from RESTAURANT
							<choose>
					 			<when test="search == 's_title'">
					                 WHERE r_name  like '%' || #{keyword} || '%'    
					  			</when>					 	
					  			
					            <otherwise>
					                  WHERE r_name   like '%'   
					            </otherwise>
					        </choose>		                   
		                    order by restaurant_id) a
		 )   
 		WHERE  rn BETWEEN #{start} and #{end} 
    </select>
		

<!-- 조회된 맛집 종류 데이터 갯수 세기 -->  
		<select id="condOptionRestaurantCnt" resultType="int">
			select Count(*) FROM RESTAURANT where R_COMMON_RESTAURANT = #{code}
		</select>
		
<!-- 조회된 맛집 종류데이터 리스트 --> 				
		<select id="skOptionRestaurantList" parameterType="Res" resultType="Res" >
		 		SELECT *
				FROM
				(
				        SELECT rownum rn , a.*
				        FROM
				                   (select 
				                    RESTAURANT_ID ,
									R_NAME,
									R_CONTENT,
									R_ADDRESS,
									R_HOUR,
									R_CALL,
									R_MENU,
									R_PARKING,
									R_COMMON_RESTAURANT,
									(SELECT COUNT(*) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID) AS R_RevCount ,
									TRUNC((SELECT AVG(R_SCORE) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID), 0) AS R_AvgScore,
									CREATE_DATE ,
									MODIFIED_DATE , 
		                   			(select word 
										from(select 
										        bcd||mcd as code, 
										        word 
										    from
										        common
										    where bcd='loc') b
										    where code = R_COMMON_LOC)as R_COMMON_LOC				                   
				                   
				                   from RESTAURANT
								     where R_COMMON_RESTAURANT = #{code}        
				                    order by restaurant_id desc) a
				 )   
		 		WHERE  rn BETWEEN #{start} and #{end}
		 		
		</select>

<!-- 조회된 지역 데이터 갯수 세기 -->  
		<select id="condOptionLocResCnt" resultType="int">
			select Count(*) FROM RESTAURANT where R_COMMON_LOC = #{code}
		</select>		
<!-- 조회된 지역데이터 리스트 --> 				
		<select id="skOptionLocList" parameterType="Res" resultType="Res" >
		 		SELECT *
				FROM
				(
				  SELECT rownum rn , a.*
				  FROM
				        (select RESTAURANT_ID ,
									R_NAME,
									R_CONTENT,
									R_ADDRESS,
									R_HOUR,
									R_CALL,
									R_MENU,
									R_PARKING,
									R_COMMON_RESTAURANT,
									(SELECT COUNT(*) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID) AS R_RevCount ,
									TRUNC((SELECT AVG(R_SCORE) FROM res_rev WHERE restaurant_id = RESTAURANT.RESTAURANT_ID), 0) AS R_AvgScore,
									CREATE_DATE ,
									MODIFIED_DATE , 
		                   			(select word 
										from(select 
										        bcd||mcd as code, 
										        word 
										    from
										        common
										    where bcd='loc') b
										    where code = R_COMMON_LOC)as R_COMMON_LOC
		                   from RESTAURANT
						     where R_COMMON_LOC = #{code}        
		                    order by restaurant_id desc) a
				 )   
		 		WHERE  rn BETWEEN #{start} and #{end} 
			
		</select>
</mapper>